[
	"addedvarplot",
	"addK",
	"addlevels",
	"addTerms",
	"addTerms",
	"adtest",
	"andrewsplot",
	"anova",
	"anova",
	"anova",
	"anova1",
	"anova2",
	"anovan",
	"ansaribradley",
	"aoctool",
	"barttest",
	"BayesianOptimization",
	"bayesopt",
	"bbdesign",
	"bestPoint",
	"betacdf",
	"BetaDistribution",
	"betafit",
	"betainv",
	"betalike",
	"betapdf",
	"betarnd",
	"betastat",
	"binocdf",
	"binofit",
	"binoinv",
	"BinomialDistribution",
	"binopdf",
	"binornd",
	"binostat",
	"binScatterPlot",
	"biplot",
	"BirnbaumSaundersDistribution",
	"bootci",
	"bootstrp",
	"boundary",
	"boxplot",
	"BurrDistribution",
	"CalinskiHarabaszEvaluation",
	"candexch",
	"candgen",
	"canoncorr",
	"capability",
	"capaplot",
	"caseread",
	"casewrite",
	"ccdesign",
	"cdf",
	"cdf",
	"cdfplot",
	"cell2dataset",
	"chi2cdf",
	"chi2gof",
	"chi2inv",
	"chi2pdf",
	"chi2rnd",
	"chi2stat",
	"cholcov",
	"ClassificationBaggedEnsemble",
	"ClassificationBaggedEnsemble.oobEdge",
	"ClassificationBaggedEnsemble.oobLoss",
	"ClassificationBaggedEnsemble.oobMargin",
	"ClassificationBaggedEnsemble.oobPermutedPredictorImportance",
	"ClassificationDiscriminant",
	"ClassificationDiscriminant.fit",
	"ClassificationDiscriminant.make",
	"ClassificationDiscriminant.template",
	"ClassificationECOC",
	"ClassificationECOC.compact",
	"ClassificationECOC.crossval",
	"ClassificationECOC.resubEdge",
	"ClassificationECOC.resubLoss",
	"ClassificationECOC.resubMargin",
	"ClassificationECOC.resubPredict",
	"ClassificationEnsemble",
	"ClassificationEnsemble.compact",
	"ClassificationEnsemble.crossval",
	"ClassificationEnsemble.resubEdge",
	"ClassificationEnsemble.resubLoss",
	"ClassificationEnsemble.resubMargin",
	"ClassificationEnsemble.resubPredict",
	"ClassificationEnsemble.resume",
	"ClassificationKernel",
	"ClassificationKNN",
	"ClassificationKNN.fit",
	"ClassificationKNN.template",
	"classificationLearner",
	"ClassificationLinear",
	"ClassificationLinear.edge",
	"ClassificationLinear.loss",
	"ClassificationLinear.margin",
	"ClassificationLinear.selectModels",
	"ClassificationNaiveBayes",
	"ClassificationPartitionedECOC",
	"ClassificationPartitionedEnsemble",
	"ClassificationPartitionedEnsemble.kfoldEdge",
	"ClassificationPartitionedEnsemble.kfoldLoss",
	"ClassificationPartitionedEnsemble.resume",
	"ClassificationPartitionedKernel",
	"ClassificationPartitionedKernelECOC",
	"ClassificationPartitionedLinear",
	"ClassificationPartitionedLinear.kfoldEdge",
	"ClassificationPartitionedLinear.kfoldLoss",
	"ClassificationPartitionedLinear.kfoldMargin",
	"ClassificationPartitionedLinear.kfoldPredict",
	"ClassificationPartitionedLinearECOC",
	"ClassificationPartitionedLinearECOC.kfoldEdge",
	"ClassificationPartitionedLinearECOC.kfoldLoss",
	"ClassificationPartitionedLinearECOC.kfoldMargin",
	"ClassificationPartitionedLinearECOC.kfoldPredict",
	"ClassificationPartitionedModel",
	"ClassificationSVM",
	"ClassificationSVMCoderConfigurer",
	"ClassificationTree",
	"ClassificationTree.fit",
	"ClassificationTree.template",
	"classify",
	"classreg.learning.partition.RegressionPartitionedSVM",
	"classregtree",
	"classregtree.catsplit",
	"classregtree.children",
	"classregtree.classcount",
	"classregtree.classname",
	"classregtree.classprob",
	"classregtree.classregtree",
	"classregtree.cutcategories",
	"classregtree.cutpoint",
	"classregtree.cuttype",
	"classregtree.cutvar",
	"classregtree.disp",
	"classregtree.display",
	"classregtree.eval",
	"classregtree.isbranch",
	"classregtree.meansurrvarassoc",
	"classregtree.nodeclass",
	"classregtree.nodeerr",
	"classregtree.nodemean",
	"classregtree.nodeprob",
	"classregtree.nodesize",
	"classregtree.numnodes",
	"classregtree.parent",
	"classregtree.prune",
	"classregtree.prunelist",
	"classregtree.risk",
	"classregtree.subsasgn",
	"classregtree.subsref",
	"classregtree.surrcutcategories",
	"classregtree.surrcutflip",
	"classregtree.surrcutpoint",
	"classregtree.surrcuttype",
	"classregtree.surrcutvar",
	"classregtree.surrvarassoc",
	"classregtree.test",
	"classregtree.type",
	"classregtree.varimportance",
	"classregtree.view",
	"cluster",
	"cluster",
	"clusterdata",
	"clustering.evaluation.ClusterCriterion",
	"cmdscale",
	"coefCI",
	"coefCI",
	"coefCI",
	"coefCI",
	"coefCI",
	"coefTest",
	"coefTest",
	"coeftest",
	"coefTest",
	"coefTest",
	"coefTest",
	"combnk",
	"compact",
	"compact",
	"compact",
	"compact",
	"compact",
	"compact",
	"compact",
	"compact",
	"compact",
	"CompactClassificationDiscriminant",
	"CompactClassificationECOC",
	"CompactClassificationECOC.discardSupportVectors",
	"CompactClassificationECOC.edge",
	"CompactClassificationECOC.loss",
	"CompactClassificationECOC.margin",
	"CompactClassificationECOC.selectModels",
	"CompactClassificationEnsemble",
	"CompactClassificationEnsemble.edge",
	"CompactClassificationEnsemble.loss",
	"CompactClassificationEnsemble.margin",
	"CompactClassificationEnsemble.predictorImportance",
	"CompactClassificationEnsemble.removeLearners",
	"CompactClassificationNaiveBayes",
	"CompactClassificationSVM",
	"CompactClassificationTree",
	"CompactGeneralizedLinearModel",
	"CompactLinearModel",
	"CompactLinearModel.anova",
	"CompactRegressionEnsemble",
	"CompactRegressionEnsemble.loss",
	"CompactRegressionEnsemble.removeLearners",
	"CompactRegressionGP",
	"CompactRegressionSVM",
	"CompactRegressionSVM.discardSupportVectors",
	"CompactRegressionSVM.loss",
	"CompactRegressionTree",
	"CompactRegressionTree.surrogateAssociation",
	"CompactTreeBagger",
	"CompactTreeBagger.combine",
	"CompactTreeBagger.CompactTreeBagger",
	"CompactTreeBagger.error",
	"CompactTreeBagger.margin",
	"CompactTreeBagger.mdsprox",
	"CompactTreeBagger.meanMargin",
	"CompactTreeBagger.outlierMeasure",
	"CompactTreeBagger.predict",
	"CompactTreeBagger.proximity",
	"CompactTreeBagger.setDefaultYfit",
	"compare",
	"compare",
	"compareHoldout",
	"confusionchart",
	"confusionmat",
	"controlchart",
	"controlrules",
	"cophenet",
	"copulacdf",
	"copulafit",
	"copulaparam",
	"copulapdf",
	"copularnd",
	"copulastat",
	"cordexch",
	"corr",
	"corrcov",
	"covarianceParameters",
	"covarianceParameters",
	"coxphfit",
	"createns",
	"crosstab",
	"crossval",
	"crossval",
	"crossval",
	"crossval",
	"crossval",
	"crossval",
	"crossval",
	"crossval",
	"crossval",
	"crossval",
	"cvloss",
	"cvloss",
	"cvpartition",
	"cvpartition",
	"cvpartition.disp",
	"cvpartition.display",
	"cvshrink",
	"datasample",
	"dataset",
	"dataset.cat",
	"dataset.cellstr",
	"dataset.dataset",
	"dataset.datasetfun",
	"dataset.disp",
	"dataset.display",
	"dataset.double",
	"dataset.end",
	"dataset.get",
	"dataset.horzcat",
	"dataset.intersect",
	"dataset.isempty",
	"dataset.ismember",
	"dataset.length",
	"dataset.ndims",
	"dataset.numel",
	"dataset.replacedata",
	"dataset.replaceWithMissing",
	"dataset.set",
	"dataset.setdiff",
	"dataset.setxor",
	"dataset.single",
	"dataset.size",
	"dataset.sortrows",
	"dataset.stack",
	"dataset.subsasgn",
	"dataset.subsref",
	"dataset.summary",
	"dataset.union",
	"dataset.unique",
	"dataset.unstack",
	"dataset.vertcat",
	"dataset2cell",
	"dataset2struct",
	"dataset2table",
	"daugment",
	"DaviesBouldinEvaluation",
	"dcovary",
	"dendrogram",
	"designecoc",
	"designMatrix",
	"designMatrix",
	"devianceTest",
	"dfittool",
	"discardSupportVectors",
	"disp",
	"disp",
	"disp",
	"disp",
	"disp",
	"distributionFitter",
	"distributionFitter",
	"disttool",
	"droplevels",
	"dummyvar",
	"dwtest",
	"dwtest",
	"ecdf",
	"ecdfhist",
	"edge",
	"edge",
	"edge",
	"edge",
	"edge",
	"edge",
	"epsilon",
	"evalclusters",
	"evcdf",
	"evfit",
	"evinv",
	"evlike",
	"evpdf",
	"evrnd",
	"evstat",
	"ExhaustiveSearcher",
	"expcdf",
	"expfit",
	"expinv",
	"explike",
	"ExponentialDistribution",
	"export",
	"exppdf",
	"exprnd",
	"expstat",
	"ExtremeValueDistribution",
	"factoran",
	"fcdf",
	"FeatureSelectionNCAClassification",
	"FeatureSelectionNCAClassification.loss",
	"FeatureSelectionNCAClassification.predict",
	"FeatureSelectionNCAClassification.refit",
	"FeatureSelectionNCARegression",
	"FeatureSelectionNCARegression.loss",
	"FeatureSelectionNCARegression.predict",
	"FeatureSelectionNCARegression.refit",
	"feval",
	"feval",
	"feval",
	"ff2n",
	"finv",
	"fishertest",
	"fitcdiscr",
	"fitcecoc",
	"fitcensemble",
	"fitckernel",
	"fitcknn",
	"fitclinear",
	"fitcnb",
	"fitcsvm",
	"fitctree",
	"fitdist",
	"fitensemble",
	"fitglm",
	"fitglme",
	"fitgmdist",
	"fitlm",
	"fitlme",
	"fitlmematrix",
	"fitnlm",
	"fitPosterior",
	"fitPosterior",
	"fitrensemble",
	"fitrgp",
	"fitrkernel",
	"fitrlinear",
	"fitrm",
	"fitrsvm",
	"fitrtree",
	"fitSVMPosterior",
	"fitted",
	"fitted",
	"fixedEffects",
	"fixedEffects",
	"fpdf",
	"fracfact",
	"fracfactgen",
	"friedman",
	"frnd",
	"fscnca",
	"fsrnca",
	"fstat",
	"fsurfht",
	"fullfact",
	"gagerr",
	"gamcdf",
	"gamfit",
	"gaminv",
	"gamlike",
	"GammaDistribution",
	"gampdf",
	"gamrnd",
	"gamstat",
	"GapEvaluation",
	"GeneralizedExtremeValueDistribution",
	"GeneralizedLinearMixedModel",
	"GeneralizedLinearModel",
	"GeneralizedLinearModel.fit",
	"GeneralizedLinearModel.stepwise",
	"GeneralizedParetoDistribution",
	"generateCode",
	"generateFiles",
	"geocdf",
	"geoinv",
	"geomean",
	"geopdf",
	"geornd",
	"geostat",
	"getlabels",
	"getlevels",
	"gevcdf",
	"gevfit",
	"gevinv",
	"gevlike",
	"gevpdf",
	"gevrnd",
	"gevstat",
	"gline",
	"glmfit",
	"glmval",
	"glyphplot",
	"gmdistribution",
	"gmdistribution.fit",
	"gname",
	"gpcdf",
	"gpfit",
	"gpinv",
	"gplike",
	"gplotmatrix",
	"gppdf",
	"gprnd",
	"gpstat",
	"grp2idx",
	"grpstats",
	"grpstats",
	"gscatter",
	"HalfNormalDistribution",
	"haltonset",
	"haltonset",
	"HamiltonianSampler",
	"HamiltonianSampler.diagnostics",
	"HamiltonianSampler.drawSamples",
	"HamiltonianSampler.estimateMAP",
	"HamiltonianSampler.tuneSampler",
	"harmmean",
	"hist3",
	"histfit",
	"hmcSampler",
	"hmmdecode",
	"hmmestimate",
	"hmmgenerate",
	"hmmtrain",
	"hmmviterbi",
	"hougen",
	"hygecdf",
	"hygeinv",
	"hygepdf",
	"hygernd",
	"hygestat",
	"hyperparameters",
	"icdf",
	"inconsistent",
	"increaseB",
	"interactionplot",
	"InverseGaussianDistribution",
	"invpred",
	"iqr",
	"islevel",
	"ismissing",
	"iwishrnd",
	"jackknife",
	"jbtest",
	"johnsrnd",
	"join",
	"KDTreeSearcher",
	"KernelDistribution",
	"kfoldEdge",
	"kfoldEdge",
	"kfoldEdge",
	"kfoldEdge",
	"kfoldfun",
	"kfoldfun",
	"kfoldfun",
	"kfoldLoss",
	"kfoldLoss",
	"kfoldLoss",
	"kfoldLoss",
	"kfoldLoss",
	"kfoldLoss",
	"kfoldMargin",
	"kfoldMargin",
	"kfoldMargin",
	"kfoldMargin",
	"kfoldPredict",
	"kfoldPredict",
	"kfoldPredict",
	"kfoldPredict",
	"kfoldPredict",
	"kfoldPredict",
	"kmeans",
	"kmedoids",
	"knnsearch",
	"knnsearch",
	"kruskalwallis",
	"ksdensity",
	"kstest",
	"kstest2",
	"kurtosis",
	"lasso",
	"lassoglm",
	"lassoPlot",
	"learnerCoderConfigurer",
	"levelcounts",
	"leverage",
	"lhsdesign",
	"lhsnorm",
	"lillietest",
	"LinearMixedModel",
	"LinearMixedModel.fit",
	"LinearMixedModel.fitmatrix",
	"LinearModel",
	"LinearModel.fit",
	"LinearModel.stepwise",
	"linhyptest",
	"linkage",
	"loadCompactModel",
	"LogisticDistribution",
	"LoglogisticDistribution",
	"logncdf",
	"lognfit",
	"logninv",
	"lognlike",
	"LognormalDistribution",
	"lognpdf",
	"lognrnd",
	"lognstat",
	"logP",
	"logP",
	"loss",
	"loss",
	"loss",
	"loss",
	"loss",
	"loss",
	"loss",
	"loss",
	"loss",
	"lowerparams",
	"lsline",
	"mad",
	"mahal",
	"mahal",
	"mahal",
	"maineffectsplot",
	"makecdiscr",
	"makedist",
	"manova",
	"manova1",
	"manovacluster",
	"margin",
	"margin",
	"margin",
	"margin",
	"margin",
	"margin",
	"margmean",
	"mat2dataset",
	"mauchly",
	"mdscale",
	"mean",
	"median",
	"mergelevels",
	"mhsample",
	"mle",
	"mlecov",
	"mnpdf",
	"mnrfit",
	"mnrnd",
	"mnrval",
	"moment",
	"multcompare",
	"multcompare",
	"MultinomialDistribution",
	"multivarichart",
	"mvksdensity",
	"mvncdf",
	"mvnpdf",
	"mvnrnd",
	"mvregress",
	"mvregresslike",
	"mvtcdf",
	"mvtpdf",
	"mvtrnd",
	"NakagamiDistribution",
	"nancov",
	"nanmax",
	"nanmean",
	"nanmedian",
	"nanmin",
	"nanstd",
	"nansum",
	"nanvar",
	"nbincdf",
	"nbinfit",
	"nbininv",
	"nbinpdf",
	"nbinrnd",
	"nbinstat",
	"ncfcdf",
	"ncfinv",
	"ncfpdf",
	"ncfrnd",
	"ncfstat",
	"nctcdf",
	"nctinv",
	"nctpdf",
	"nctrnd",
	"nctstat",
	"ncx2cdf",
	"ncx2inv",
	"ncx2pdf",
	"ncx2rnd",
	"ncx2stat",
	"NegativeBinomialDistribution",
	"negloglik",
	"nLinearCoeffs",
	"nlinfit",
	"nlintool",
	"nlmefit",
	"nlmefitsa",
	"nlparci",
	"nlpredci",
	"nnmf",
	"nominal",
	"NonLinearModel",
	"NonLinearModel.fit",
	"NormalDistribution",
	"normcdf",
	"normfit",
	"norminv",
	"normlike",
	"normpdf",
	"normplot",
	"normrnd",
	"normspec",
	"normstat",
	"nsegments",
	"oobPredict",
	"oobPredict",
	"oobPredict",
	"oobQuantilePredict",
	"optimalleaforder",
	"optimizableVariable",
	"ordinal",
	"parallelcoords",
	"paramci",
	"paretotails",
	"partialcorr",
	"partialcorri",
	"pca",
	"pcacov",
	"pcares",
	"pdf",
	"pdf",
	"pdist",
	"pdist2",
	"pearsrnd",
	"perfcurve",
	"PiecewiseLinearDistribution",
	"plot",
	"plot",
	"plot",
	"plot",
	"plotAdded",
	"plotAdjustedResponse",
	"plotDiagnostics",
	"plotDiagnostics",
	"plotDiagnostics",
	"plotEffects",
	"plotInteraction",
	"plotPartialDependence",
	"plotprofile",
	"plotResiduals",
	"plotResiduals",
	"plotResiduals",
	"plotResiduals",
	"plotResiduals",
	"plotSlice",
	"plotSlice",
	"plotSlice",
	"plsregress",
	"poisscdf",
	"poissfit",
	"poissinv",
	"PoissonDistribution",
	"poisspdf",
	"poissrnd",
	"poisstat",
	"polyconf",
	"polytool",
	"posterior",
	"postFitStatistics",
	"ppca",
	"prctile",
	"predict",
	"predict",
	"predict",
	"predict",
	"predict",
	"predict",
	"predict",
	"predict",
	"predict",
	"predict",
	"predict",
	"predict",
	"predict",
	"predict",
	"predict",
	"predict",
	"predict",
	"predict",
	"predict",
	"predict",
	"predict",
	"predict",
	"predictConstraints",
	"predictError",
	"predictObjective",
	"predictObjectiveEvaluationTime",
	"predictorImportance",
	"predictorImportance",
	"predictorImportance",
	"princomp",
	"probplot",
	"procrustes",
	"proflik",
	"prune",
	"prune",
	"qqplot",
	"qrandset",
	"qrandset.disp",
	"qrandset.end",
	"qrandset.length",
	"qrandset.ndims",
	"qrandset.net",
	"qrandset.qrandset",
	"qrandset.scramble",
	"qrandset.size",
	"qrandset.subsref",
	"qrandstream",
	"qrandstream",
	"qrandstream.addlistener",
	"qrandstream.delete",
	"qrandstream.disp",
	"qrandstream.eq",
	"qrandstream.findobj",
	"qrandstream.findprop",
	"qrandstream.ge",
	"qrandstream.gt",
	"qrandstream.isvalid",
	"qrandstream.le",
	"qrandstream.lt",
	"qrandstream.ne",
	"qrandstream.notify",
	"qrandstream.qrand",
	"qrandstream.rand",
	"qrandstream.reset",
	"quantile",
	"quantilePredict",
	"randg",
	"random",
	"random",
	"random",
	"random",
	"random",
	"random",
	"random",
	"random",
	"randomEffects",
	"randomEffects",
	"randsample",
	"randtool",
	"range",
	"rangesearch",
	"rangesearch",
	"ranksum",
	"ranova",
	"raylcdf",
	"RayleighDistribution",
	"raylfit",
	"raylinv",
	"raylpdf",
	"raylrnd",
	"raylstat",
	"rcoplot",
	"ReconstructionICA",
	"refcurve",
	"refit",
	"refline",
	"regress",
	"RegressionBaggedEnsemble",
	"RegressionBaggedEnsemble.oobLoss",
	"RegressionBaggedEnsemble.oobPermutedPredictorImportance",
	"RegressionEnsemble",
	"RegressionEnsemble.compact",
	"RegressionEnsemble.cvshrink",
	"RegressionEnsemble.regularize",
	"RegressionEnsemble.resubLoss",
	"RegressionEnsemble.resubPredict",
	"RegressionEnsemble.resume",
	"RegressionEnsemble.shrink",
	"RegressionGP",
	"RegressionKernel",
	"regressionLearner",
	"RegressionLinear",
	"RegressionLinear.loss",
	"RegressionLinear.selectModels",
	"RegressionPartitionedEnsemble",
	"RegressionPartitionedEnsemble.kfoldLoss",
	"RegressionPartitionedEnsemble.resume",
	"RegressionPartitionedKernel",
	"RegressionPartitionedLinear",
	"RegressionPartitionedLinear.kfoldLoss",
	"RegressionPartitionedLinear.kfoldPredict",
	"RegressionPartitionedModel",
	"RegressionSVM",
	"RegressionSVM.compact",
	"RegressionSVM.resubLoss",
	"RegressionSVM.resubPredict",
	"RegressionSVM.resume",
	"RegressionSVMCoderConfigurer",
	"RegressionTree",
	"RegressionTree.fit",
	"RegressionTree.template",
	"regstats",
	"relieff",
	"removeTerms",
	"removeTerms",
	"reorderlevels",
	"repartition",
	"RepeatedMeasuresModel",
	"residuals",
	"residuals",
	"response",
	"response",
	"resubEdge",
	"resubEdge",
	"resubEdge",
	"resubEdge",
	"resubEdge",
	"resubLoss",
	"resubLoss",
	"resubLoss",
	"resubLoss",
	"resubLoss",
	"resubLoss",
	"resubLoss",
	"resubMargin",
	"resubMargin",
	"resubMargin",
	"resubMargin",
	"resubMargin",
	"resubPredict",
	"resubPredict",
	"resubPredict",
	"resubPredict",
	"resubPredict",
	"resubPredict",
	"resubPredict",
	"resume",
	"resume",
	"resume",
	"resume",
	"rica",
	"RicianDistribution",
	"ridge",
	"robustcov",
	"robustdemo",
	"robustfit",
	"rotatefactors",
	"rowexch",
	"rsmdemo",
	"rstool",
	"runstest",
	"sampsizepwr",
	"saveCompactModel",
	"scatterhist",
	"segment",
	"sequentialfs",
	"setlabels",
	"signrank",
	"signtest",
	"silhouette",
	"SilhouetteEvaluation",
	"skewness",
	"slicesample",
	"sobolset",
	"sobolset",
	"sortClasses",
	"sparsefilt",
	"SparseFiltering",
	"squareform",
	"StableDistribution",
	"statget",
	"statset",
	"std",
	"step",
	"step",
	"stepwise",
	"stepwisefit",
	"stepwiseglm",
	"stepwiselm",
	"struct2dataset",
	"surfht",
	"surrogateAssociation",
	"svmclassify",
	"svmtrain",
	"table2dataset",
	"tabulate",
	"tblread",
	"tblwrite",
	"tcdf",
	"tdfread",
	"templateDiscriminant",
	"templateECOC",
	"templateEnsemble",
	"templateKernel",
	"templateKNN",
	"templateLinear",
	"templateNaiveBayes",
	"templateSVM",
	"templateTree",
	"test",
	"testcholdout",
	"testckfold",
	"tiedrank",
	"tinv",
	"tLocationScaleDistribution",
	"tpdf",
	"training",
	"transform",
	"TreeBagger",
	"TreeBagger",
	"TreeBagger.append",
	"TreeBagger.compact",
	"TreeBagger.error",
	"TreeBagger.fillprox",
	"TreeBagger.growTrees",
	"TreeBagger.margin",
	"TreeBagger.mdsprox",
	"TreeBagger.meanMargin",
	"TreeBagger.oobError",
	"TreeBagger.oobMargin",
	"TreeBagger.oobMeanMargin",
	"TreeBagger.oobQuantileError",
	"TreeBagger.quantileError",
	"TriangularDistribution",
	"trimmean",
	"trnd",
	"truncate",
	"tsne",
	"tstat",
	"ttest",
	"ttest2",
	"unidcdf",
	"unidinv",
	"unidpdf",
	"unidrnd",
	"unidstat",
	"unifcdf",
	"unifinv",
	"unifit",
	"UniformDistribution",
	"unifpdf",
	"unifrnd",
	"unifstat",
	"update",
	"upperparams",
	"validatedUpdateInputs",
	"var",
	"vartest",
	"vartest2",
	"vartestn",
	"view",
	"view",
	"wblcdf",
	"wblfit",
	"wblinv",
	"wbllike",
	"wblpdf",
	"wblplot",
	"wblrnd",
	"wblstat",
	"WeibullDistribution",
	"wishrnd",
	"x2fx",
	"xptread",
	"zscore",
	"ztest"
]
