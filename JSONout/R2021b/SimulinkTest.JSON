[
	"addModelCoverage",
	"addSimulinkTestResults",
	"assertSignalsMatch",
	"assumeSignalsMatch",
	"createSandbox",
	"createSimulationInput",
	"createTemporaryFolder",
	"createTestForSubsystem",
	"createTestForSubsystem",
	"fatalAssertSignalsMatch",
	"loadSystem",
	"simulate",
	"sltest.Assessment",
	"sltest.AssessmentSet",
	"sltest.CodeImporter",
	"sltest.CodeImporter.SandboxSettings",
	"sltest.getAssessments",
	"sltest.harness.check",
	"sltest.harness.clone",
	"sltest.harness.close",
	"sltest.harness.convert",
	"sltest.harness.create",
	"sltest.harness.delete",
	"sltest.harness.export",
	"sltest.harness.find",
	"sltest.harness.getHarnessCreateDefaults",
	"sltest.harness.import",
	"sltest.harness.load",
	"sltest.harness.move",
	"sltest.harness.open",
	"sltest.harness.push",
	"sltest.harness.rebuild",
	"sltest.harness.set",
	"sltest.harness.setHarnessCreateDefaults",
	"sltest.harness.showDialog",
	"sltest.harness.SimulationInput",
	"sltest.import.sldvData",
	"sltest.io.SimulinkTestSpreadsheet",
	"sltest.plugins.coverage.CoverageMetrics",
	"sltest.plugins.coverage.ModelCoverageReport",
	"sltest.plugins.MATLABTestCaseIntegrationPlugin",
	"sltest.plugins.ModelCoveragePlugin",
	"sltest.plugins.TestManagerResultsPlugin",
	"sltest.plugins.ToTestManagerLog",
	"sltest.TestCase",
	"sltest.TestCase.forInteractiveUse",
	"sltest.testmanager.BaselineCriteria",
	"sltest.testmanager.clear",
	"sltest.testmanager.clearResults",
	"sltest.testmanager.close",
	"sltest.testmanager.ComparisonRunResult",
	"sltest.testmanager.ComparisonSignalResult",
	"sltest.testmanager.copyTests",
	"sltest.testmanager.CoverageSettings",
	"sltest.testmanager.createTestForComponent",
	"sltest.testmanager.createTestsFromModel",
	"sltest.testmanager.CustomCriteria",
	"sltest.testmanager.CustomCriteriaResult",
	"sltest.testmanager.DiagnosticRecord",
	"sltest.testmanager.EquivalenceCriteria",
	"sltest.testmanager.exportResults",
	"sltest.testmanager.getpref",
	"sltest.testmanager.getResultSets",
	"sltest.testmanager.getTestFiles",
	"sltest.testmanager.importResults",
	"sltest.testmanager.load",
	"sltest.testmanager.LoggedSignal",
	"sltest.testmanager.LoggedSignalSet",
	"sltest.testmanager.moveTests",
	"sltest.testmanager.Options",
	"sltest.testmanager.ParameterOverride",
	"sltest.testmanager.ParameterSet",
	"sltest.testmanager.report",
	"sltest.testmanager.ResultSet",
	"sltest.testmanager.run",
	"sltest.testmanager.setpref",
	"sltest.testmanager.SignalCriteria",
	"sltest.testmanager.TestCase",
	"sltest.testmanager.TestCaseResult",
	"sltest.testmanager.TestFile",
	"sltest.testmanager.TestFileResult",
	"sltest.testmanager.TestInput",
	"sltest.testmanager.TestIteration",
	"sltest.testmanager.TestIterationResult",
	"sltest.testmanager.TestResultReport",
	"sltest.testmanager.TestSpecReport",
	"sltest.testmanager.TestSuite",
	"sltest.testmanager.TestSuiteResult",
	"sltest.testmanager.view",
	"sltest.testsequence.activateScenario",
	"sltest.testsequence.addScenario",
	"sltest.testsequence.addStep",
	"sltest.testsequence.addStepAfter",
	"sltest.testsequence.addStepBefore",
	"sltest.testsequence.addSymbol",
	"sltest.testsequence.addTransition",
	"sltest.testsequence.deleteScenario",
	"sltest.testsequence.deleteStep",
	"sltest.testsequence.deleteSymbol",
	"sltest.testsequence.deleteTransition",
	"sltest.testsequence.editScenario",
	"sltest.testsequence.editStep",
	"sltest.testsequence.editSymbol",
	"sltest.testsequence.editTransition",
	"sltest.testsequence.find",
	"sltest.testsequence.findStep",
	"sltest.testsequence.findSymbol",
	"sltest.testsequence.getActiveScenario",
	"sltest.testsequence.getAllScenarios",
	"sltest.testsequence.getProperty",
	"sltest.testsequence.getScenarioControlSource",
	"sltest.testsequence.isUsingScenarios",
	"sltest.testsequence.newBlock",
	"sltest.testsequence.readStep",
	"sltest.testsequence.readSymbol",
	"sltest.testsequence.readTransition",
	"sltest.testsequence.setProperty",
	"sltest.testsequence.setScenarioControlSource",
	"sltest.testsequence.useScenario",
	"sltestiteration",
	"sltestmgr",
	"verifySignalsMatch"
]
