[
	"add",
	"addCustomBasemap",
	"addCustomTerrain",
	"algdeintrlv",
	"algintrlv",
	"amdemod",
	"ammod",
	"angle",
	"apskdemod",
	"apskmod",
	"arithdeco",
	"arithenco",
	"arrayConfig",
	"awgn",
	"bchdec",
	"bchenc",
	"bchgenpoly",
	"bchnumerr",
	"berawgn",
	"bercoding",
	"berconfint",
	"berfading",
	"berfit",
	"bersync",
	"bertool",
	"bi2de",
	"bin2gray",
	"bit2int",
	"biterr",
	"blkdiagbfweights",
	"bsc",
	"buildingMaterialPermittivity",
	"callLettersToPICode",
	"cart2sphvec",
	"cdma2000ForwardReferenceChannels",
	"cdma2000ForwardWaveformGenerator",
	"cdma2000ReverseReferenceChannels",
	"cdma2000ReverseWaveformGenerator",
	"channelDelay",
	"clearMap",
	"close",
	"CloseIn",
	"coeffs",
	"comm.ACPR",
	"comm.AGC",
	"comm.APPDecoder",
	"comm.AWGNChannel",
	"comm.BarkerCode",
	"comm.BasebandFileReader",
	"comm.BasebandFileWriter",
	"comm.BCHDecoder",
	"comm.BCHEncoder",
	"comm.BPSKDemodulator",
	"comm.BPSKModulator",
	"comm.CarrierSynchronizer",
	"comm.CCDF",
	"comm.ChannelFilter",
	"comm.CoarseFrequencyCompensator",
	"comm.ConstellationDiagram",
	"comm.ConvolutionalDeinterleaver",
	"comm.ConvolutionalEncoder",
	"comm.ConvolutionalInterleaver",
	"comm.CPFSKDemodulator",
	"comm.CPFSKModulator",
	"comm.CPMDemodulator",
	"comm.CPMModulator",
	"comm.CRCDetector",
	"comm.CRCGenerator",
	"comm.DBPSKDemodulator",
	"comm.DBPSKModulator",
	"comm.DecisionFeedbackEqualizer",
	"comm.Descrambler",
	"comm.DifferentialDecoder",
	"comm.DifferentialEncoder",
	"comm.DiscreteTimeVCO",
	"comm.DPD",
	"comm.DPDCoefficientEstimator",
	"comm.DPSKDemodulator",
	"comm.DPSKModulator",
	"comm.DQPSKDemodulator",
	"comm.DQPSKModulator",
	"comm.ErrorRate",
	"comm.EVM",
	"comm.EyeDiagram",
	"comm.FMBroadcastDemodulator",
	"comm.FMBroadcastModulator",
	"comm.FMDemodulator",
	"comm.FMModulator",
	"comm.FSKDemodulator",
	"comm.FSKModulator",
	"comm.GeneralQAMDemodulator",
	"comm.GeneralQAMModulator",
	"comm.GeneralQAMTCMDemodulator",
	"comm.GeneralQAMTCMModulator",
	"comm.GMSKDemodulator",
	"comm.GMSKModulator",
	"comm.GMSKTimingSynchronizer",
	"comm.GoldSequence",
	"comm.gpu.AWGNChannel",
	"comm.gpu.BlockDeinterleaver",
	"comm.gpu.BlockInterleaver",
	"comm.gpu.ConvolutionalDeinterleaver",
	"comm.gpu.ConvolutionalEncoder",
	"comm.gpu.ConvolutionalInterleaver",
	"comm.gpu.LDPCDecoder",
	"comm.gpu.PSKDemodulator",
	"comm.gpu.PSKModulator",
	"comm.gpu.TurboDecoder",
	"comm.gpu.ViterbiDecoder",
	"comm.HadamardCode",
	"comm.HDLCRCDetector",
	"comm.HDLCRCGenerator",
	"comm.HDLRSDecoder",
	"comm.HDLRSEncoder",
	"comm.HelicalDeinterleaver",
	"comm.HelicalInterleaver",
	"comm.IntegrateAndDumpFilter",
	"comm.IQImbalanceCompensator",
	"comm.KasamiSequence",
	"comm.LDPCDecoder",
	"comm.LDPCEncoder",
	"comm.LinearEqualizer",
	"comm.LTEMIMOChannel",
	"comm.MemorylessNonlinearity",
	"comm.MER",
	"comm.MIMOChannel",
	"comm.MLSEEqualizer",
	"comm.MSKDemodulator",
	"comm.MSKModulator",
	"comm.MSKTimingSynchronizer",
	"comm.MultibandCombiner",
	"comm.MultiplexedDeinterleaver",
	"comm.MultiplexedInterleaver",
	"comm.OFDMDemodulator",
	"comm.OFDMModulator",
	"comm.OQPSKDemodulator",
	"comm.OQPSKModulator",
	"comm.OSTBCCombiner",
	"comm.OSTBCEncoder",
	"comm.OVSFCode",
	"comm.PAMDemodulator",
	"comm.PAMModulator",
	"comm.PhaseFrequencyOffset",
	"comm.PhaseNoise",
	"comm.PhaseNoise.visualize",
	"comm.PNSequence",
	"comm.PreambleDetector",
	"comm.PSKCoarseFrequencyEstimator",
	"comm.PSKDemodulator",
	"comm.PSKModulator",
	"comm.PSKTCMDemodulator",
	"comm.PSKTCMModulator",
	"comm.QAMCoarseFrequencyEstimator",
	"comm.QPSKDemodulator",
	"comm.QPSKModulator",
	"comm.RaisedCosineReceiveFilter",
	"comm.RaisedCosineTransmitFilter",
	"comm.Ray",
	"comm.RayleighChannel",
	"comm.RayTracingChannel",
	"comm.RBDSWaveformGenerator",
	"comm.RectangularQAMDemodulator",
	"comm.RectangularQAMModulator",
	"comm.RectangularQAMTCMDemodulator",
	"comm.RectangularQAMTCMModulator",
	"comm.RicianChannel",
	"comm.RSDecoder",
	"comm.RSEncoder",
	"comm.SampleRateOffset",
	"comm.Scrambler",
	"comm.SphereDecoder",
	"comm.SymbolSynchronizer",
	"comm.ThermalNoise",
	"comm.TurboDecoder",
	"comm.TurboEncoder",
	"comm.ViterbiDecoder",
	"comm.WalshCode",
	"comm.WINNER2Channel",
	"comm_links",
	"commlib",
	"commscope",
	"commsrc.combinedjitter",
	"commsrc.pattern",
	"commsrc.pn",
	"compand",
	"constellation",
	"constellation",
	"constellation",
	"constellation",
	"constellation",
	"contour",
	"convdeintrlv",
	"convenc",
	"convertSNR",
	"convintrlv",
	"convmtx",
	"cosets",
	"cost",
	"coverage",
	"cranerainpl",
	"crc.detector",
	"crc.generator",
	"cyclgen",
	"cyclpoly",
	"de2bi",
	"decode",
	"deintrlv",
	"dftmtx",
	"distance",
	"distspec",
	"doppler",
	"dpcmdeco",
	"dpcmenco",
	"dpcmopt",
	"dpskdemod",
	"dpskmod",
	"dvbs2ldpc",
	"dvbsapskdemod",
	"dvbsapskmod",
	"earthSurfacePermittivity",
	"elevation",
	"encode",
	"evdoForwardReferenceChannels",
	"evdoForwardWaveformGenerator",
	"evdoReverseReferenceChannels",
	"evdoReverseWaveformGenerator",
	"eyediagram",
	"fft",
	"filter",
	"fmdemod",
	"fmmod",
	"Fog",
	"fogpl",
	"FreeSpace",
	"frequencyOffset",
	"freqz",
	"fskdemod",
	"fskmod",
	"fspl",
	"fvtool",
	"Gas",
	"gaspl",
	"gen2par",
	"genqamdemod",
	"genqammod",
	"getDataVariable",
	"getPercentileRelativePower",
	"getProbability",
	"getTurboIOIndices",
	"gf",
	"gfadd",
	"gfconv",
	"gfcosets",
	"gfdeconv",
	"gfdiv",
	"gffilter",
	"gflineq",
	"gfminpol",
	"gfmul",
	"gfpretty",
	"gfprimck",
	"gfprimdf",
	"gfprimfd",
	"gfrank",
	"gfrepcov",
	"gfroots",
	"gfsub",
	"gftable",
	"gftrunc",
	"gftuple",
	"gfweight",
	"global2localcoord",
	"gray2bin",
	"grpdelay",
	"gsmCheckTimeMask",
	"gsmDownlinkConfig",
	"gsmFrame",
	"gsmInfo",
	"gsmUplinkConfig",
	"hammgen",
	"hank2sys",
	"heldeintrlv",
	"helintrlv",
	"helscandeintrlv",
	"helscanintrlv",
	"hex2poly",
	"hide",
	"hide",
	"hide",
	"hilbiir",
	"horizontalBathtub",
	"huffmandeco",
	"huffmandict",
	"huffmanenco",
	"ifft",
	"impz",
	"info",
	"info",
	"info",
	"info",
	"info",
	"info",
	"info",
	"info",
	"info",
	"info",
	"info",
	"info",
	"info",
	"info",
	"info",
	"int2bit",
	"intdump",
	"interp",
	"intrlv",
	"iqcoef2imbal",
	"iqimbal",
	"iqimbal2coef",
	"iscatastrophic",
	"isprimitive",
	"istrellis",
	"isVisible",
	"jitterHistogram",
	"ldpcDecode",
	"ldpcDecoderConfig",
	"ldpcEncode",
	"ldpcEncoderConfig",
	"ldpcQuasiCyclicMatrix",
	"link",
	"lloyds",
	"local2globalcoord",
	"location",
	"location",
	"log",
	"LongleyRice",
	"los",
	"mask2shift",
	"matdeintrlv",
	"matintrlv",
	"maxstep",
	"measurements",
	"mil188qamdemod",
	"mil188qammod",
	"minpol",
	"mldivide",
	"mlseeq",
	"mmseweights",
	"modnorm",
	"mskdemod",
	"mskmod",
	"muxdeintrlv",
	"muxintrlv",
	"noisebw",
	"noiseHistogram",
	"oct2dec",
	"oct2poly",
	"ofdmdemod",
	"ofdmEqualize",
	"ofdmmod",
	"order",
	"pamdemod",
	"pammod",
	"pathloss",
	"pattern",
	"plot",
	"plot",
	"plot",
	"plot",
	"plotPhaseNoiseFilter",
	"pmdemod",
	"pmmod",
	"poly2trellis",
	"primpoly",
	"propagationData",
	"propagationModel",
	"pskdemod",
	"pskmod",
	"qamdemod",
	"qammod",
	"qfunc",
	"qfuncinv",
	"quantiz",
	"Rain",
	"rainpl",
	"randdeintrlv",
	"randerr",
	"randintrlv",
	"randsrc",
	"range",
	"rangeangle",
	"raypl",
	"raytrace",
	"RayTracing",
	"rectpulse",
	"registerODA",
	"removeCustomBasemap",
	"removeCustomTerrain",
	"reset",
	"rsdec",
	"rsenc",
	"rsgenpoly",
	"rsgenpolycoeffs",
	"rxsite",
	"scatterplot",
	"semianalytic",
	"shift2mask",
	"show",
	"show",
	"show",
	"showcommblockdatatypetable",
	"showProfile",
	"showResourceMapping",
	"showResourceMapping",
	"sigstrength",
	"sinr",
	"siteviewer",
	"sph2cartvec",
	"srmdelay",
	"ssbdemod",
	"ssbmod",
	"stdchan",
	"step",
	"step",
	"step",
	"step",
	"step",
	"step",
	"step",
	"step",
	"step",
	"step",
	"step",
	"step",
	"step",
	"step",
	"step",
	"step",
	"step",
	"step",
	"step",
	"step",
	"step",
	"step",
	"step",
	"step",
	"step",
	"step",
	"step",
	"step",
	"step",
	"step",
	"step",
	"step",
	"step",
	"step",
	"step",
	"step",
	"step",
	"step",
	"step",
	"step",
	"step",
	"step",
	"step",
	"step",
	"symerr",
	"syndtable",
	"tdmsDatastore",
	"tdmsinfo",
	"tdmsread",
	"tdmsreadprop",
	"tdmswrite",
	"tdmswriteprop",
	"tpcdec",
	"tpcenc",
	"txsite",
	"vec2mat",
	"verticalBathtub",
	"vitdec",
	"wgn",
	"winner2.AntennaArray",
	"winner2.dipole",
	"winner2.layoutparset",
	"winner2.wim",
	"winner2.wimparset",
	"wirelessWaveformGenerator",
	"zadoffChuSeq"
]